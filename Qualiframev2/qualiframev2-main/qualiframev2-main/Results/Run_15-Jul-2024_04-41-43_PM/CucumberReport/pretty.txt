
@webcrawler @Webcrawler1
Scenario Outline: Autonomous Functional and Non-Functional test generation                                                  # src/test/resources/features/Webcrawler.feature:20
  Given user launch the application "https://www.bioreference.com/" with "False"                                            # com.framework.webcrawler.WebpageExecutor.user_launch_the_application_with(java.lang.String,java.lang.String)
      java.lang.NullPointerException
	at com.framework.webcrawler.WebpageExecutor.user_launch_the_application_with(WebpageExecutor.java:24)
	at âœ½.user launch the application "https://www.bioreference.com/" with "False"(file:///C:/Users/nivethaa.e/Qualiframe%20v2/qualiframev2-main/qualiframev2-main/src/test/resources/features/Webcrawler.feature:6)

  When user crawl the web page                                                                                              # com.framework.webcrawler.WebpageExecutor.user_crawl_the_web_page()
  Then compare crawl output with "WebCrawlReport.csv" by status                                                             # com.framework.webcrawler.WebpageExecutor.compare_crawl_output_with(java.lang.String,io.cucumber.datatable.DataTable)
    | False |
  And verify dead link and redirects for url present in "WebCrawlReport.csv"                                                # com.framework.webcrawler.WebpageExecutor.verify_dead_link_and_redirects_for_url_present_in(java.lang.String)
  And identify new broken link and redirect issues compare with baseline "DeadLinkRedirectValidation.csv"                   # com.framework.webcrawler.WebpageExecutor.identify_new_broken_link_and_redirect_issues_compare_with_baseline(java.lang.String,io.cucumber.datatable.DataTable)
    | False |
  And extract lighthouse report URL present in "ListOfUniqueURL.txt" and generate consolidated report                       # com.framework.webcrawler.WebpageExecutor.extract_lighthouse_report_URL_present_in(java.lang.String)
  And compare lighthouse report with baseline "LighthouseConsolidatedCSVreport.csv^LighthouseConsolidatedCSVreport_new.csv" # com.framework.webcrawler.WebpageExecutor.compare_lighthouse_report_with_baseline(java.lang.String,io.cucumber.datatable.DataTable)
    | False |
  And Generate functional test script for url present in "https://www.bioreference.com/"                                    # com.framework.webcrawler.WebpageExecutor.generate_functional_test_case_for_url_present_in(java.lang.String)
