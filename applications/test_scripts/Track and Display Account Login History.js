describe('Account Login History', () => { beforeEach(() => { cy.visit('/login'); }); it('should log in and display the account dashboard', () => { cy.login('112233', 'password'); cy.url().should('include', '/dashboard'); }); it('should navigate to Account Settings', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.url().should('include', '/settings'); }); it('should display login history with date, time, and device information', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('.login-session').should('have.length.greaterThan', 0); cy.get('.login-session').first().should('contain', '2023-10-01').and('contain', '10:00 AM').and('contain', 'Chrome on Windows'); }); it('should verify login sessions are sorted by date and time', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('.login-session').first().should('contain', 'Most Recent Login'); }); it('should show message for no login sessions', () => { cy.login('112233', 'password'); cy.clearLoginHistory(); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('.no-sessions-message').should('be.visible'); }); it('should update login history in real-time', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.login('112233', 'password'); cy.get('.login-session').first().should('contain', 'New Login'); }); it('should have a Clear History option', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('#clear-history').should('be.visible'); }); it('should clear login history when Clear History is used', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('#clear-history').click(); cy.get('.confirmation-message').should('be.visible'); }); it('should deny access with invalid credentials', () => { cy.visit('/login'); cy.login('invalid', 'invalid'); cy.get('.error-message').should('contain', 'invalid credentials'); }); it('should not allow editing of login history', () => { cy.login('112233', 'password'); cy.get('#account-settings').click(); cy.get('#login-history').click(); cy.get('.login-session').first().should('have.attr', 'readonly'); }); });